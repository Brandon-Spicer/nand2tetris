// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not(in=sel[0], out=notS0);
    Not(in=sel[1], out=notS1);
    Not(in=sel[2], out=notS2);

    And(a=notS0, b=notS1, out=andSA0);
    And(a=notS2, b=andSA0, out=andSA0x);
    And(a=a[0], b=andSA0x, out=outA0);
    And(a=sel[0], b=notS1, out=andSB0);
    And(a=notS2, b=andSB0, out=andSB0x);
    And(a=b[0], b=andSB0x, out=outB0);
    And(a=notS0, b=sel[1], out=andSC0);
    And(a=notS2, b=andSC0, out=andSC0x);
    And(a=c[0], b=andSC0x, out=outC0);
    And(a=sel[0], b=sel[1], out=andSD0);
    And(a=notS2, b=andSD0, out=andSD0x);
    And(a=d[0], b=andSD0x, out=outD0);
    And(a=notS0, b=notS1, out=andSE0);
    And(a=sel[2], b=andSE0, out=andSE0x);
    And(a=e[0], b=andSE0x, out=outE0);
    And(a=sel[0], b=notS1, out=andSF0);
    And(a=sel[2], b=andSF0, out=andSF0x);
    And(a=f[0], b=andSF0x, out=outF0);
    And(a=notS0, b=sel[1], out=andSG0);
    And(a=sel[2], b=andSG0, out=andSG0x);
    And(a=g[0], b=andSG0x, out=outG0);
    And(a=sel[0], b=sel[1], out=andSH0);
    And(a=sel[2], b=andSH0, out=andSH0x);
    And(a=h[0], b=andSH0x, out=outH0);
    Or8Way(in[0]=outA0, in[1]=outB0, in[2]=outC0, in[3]=outD0, in[4]=outE0, in[5]=outF0, in[6]=outG0, in[7]=outH0, out=out[0]);
    And(a=notS0, b=notS1, out=andSA1);
    And(a=notS2, b=andSA1, out=andSA1x);
    And(a=a[1], b=andSA1x, out=outA1);
    And(a=sel[0], b=notS1, out=andSB1);
    And(a=notS2, b=andSB1, out=andSB1x);
    And(a=b[1], b=andSB1x, out=outB1);
    And(a=notS0, b=sel[1], out=andSC1);
    And(a=notS2, b=andSC1, out=andSC1x);
    And(a=c[1], b=andSC1x, out=outC1);
    And(a=sel[0], b=sel[1], out=andSD1);
    And(a=notS2, b=andSD1, out=andSD1x);
    And(a=d[1], b=andSD1x, out=outD1);
    And(a=notS0, b=notS1, out=andSE1);
    And(a=sel[2], b=andSE1, out=andSE1x);
    And(a=e[1], b=andSE1x, out=outE1);
    And(a=sel[0], b=notS1, out=andSF1);
    And(a=sel[2], b=andSF1, out=andSF1x);
    And(a=f[1], b=andSF1x, out=outF1);
    And(a=notS0, b=sel[1], out=andSG1);
    And(a=sel[2], b=andSG1, out=andSG1x);
    And(a=g[1], b=andSG1x, out=outG1);
    And(a=sel[0], b=sel[1], out=andSH1);
    And(a=sel[2], b=andSH1, out=andSH1x);
    And(a=h[1], b=andSH1x, out=outH1);
    Or8Way(in[0]=outA1, in[1]=outB1, in[2]=outC1, in[3]=outD1, in[4]=outE1, in[5]=outF1, in[6]=outG1, in[7]=outH1, out=out[1]);
    And(a=notS0, b=notS1, out=andSA2);
    And(a=notS2, b=andSA2, out=andSA2x);
    And(a=a[2], b=andSA2x, out=outA2);
    And(a=sel[0], b=notS1, out=andSB2);
    And(a=notS2, b=andSB2, out=andSB2x);
    And(a=b[2], b=andSB2x, out=outB2);
    And(a=notS0, b=sel[1], out=andSC2);
    And(a=notS2, b=andSC2, out=andSC2x);
    And(a=c[2], b=andSC2x, out=outC2);
    And(a=sel[0], b=sel[1], out=andSD2);
    And(a=notS2, b=andSD2, out=andSD2x);
    And(a=d[2], b=andSD2x, out=outD2);
    And(a=notS0, b=notS1, out=andSE2);
    And(a=sel[2], b=andSE2, out=andSE2x);
    And(a=e[2], b=andSE2x, out=outE2);
    And(a=sel[0], b=notS1, out=andSF2);
    And(a=sel[2], b=andSF2, out=andSF2x);
    And(a=f[2], b=andSF2x, out=outF2);
    And(a=notS0, b=sel[1], out=andSG2);
    And(a=sel[2], b=andSG2, out=andSG2x);
    And(a=g[2], b=andSG2x, out=outG2);
    And(a=sel[0], b=sel[1], out=andSH2);
    And(a=sel[2], b=andSH2, out=andSH2x);
    And(a=h[2], b=andSH2x, out=outH2);
    Or8Way(in[0]=outA2, in[1]=outB2, in[2]=outC2, in[3]=outD2, in[4]=outE2, in[5]=outF2, in[6]=outG2, in[7]=outH2, out=out[2]);
    And(a=notS0, b=notS1, out=andSA3);
    And(a=notS2, b=andSA3, out=andSA3x);
    And(a=a[3], b=andSA3x, out=outA3);
    And(a=sel[0], b=notS1, out=andSB3);
    And(a=notS2, b=andSB3, out=andSB3x);
    And(a=b[3], b=andSB3x, out=outB3);
    And(a=notS0, b=sel[1], out=andSC3);
    And(a=notS2, b=andSC3, out=andSC3x);
    And(a=c[3], b=andSC3x, out=outC3);
    And(a=sel[0], b=sel[1], out=andSD3);
    And(a=notS2, b=andSD3, out=andSD3x);
    And(a=d[3], b=andSD3x, out=outD3);
    And(a=notS0, b=notS1, out=andSE3);
    And(a=sel[2], b=andSE3, out=andSE3x);
    And(a=e[3], b=andSE3x, out=outE3);
    And(a=sel[0], b=notS1, out=andSF3);
    And(a=sel[2], b=andSF3, out=andSF3x);
    And(a=f[3], b=andSF3x, out=outF3);
    And(a=notS0, b=sel[1], out=andSG3);
    And(a=sel[2], b=andSG3, out=andSG3x);
    And(a=g[3], b=andSG3x, out=outG3);
    And(a=sel[0], b=sel[1], out=andSH3);
    And(a=sel[2], b=andSH3, out=andSH3x);
    And(a=h[3], b=andSH3x, out=outH3);
    Or8Way(in[0]=outA3, in[1]=outB3, in[2]=outC3, in[3]=outD3, in[4]=outE3, in[5]=outF3, in[6]=outG3, in[7]=outH3, out=out[3]);
    And(a=notS0, b=notS1, out=andSA4);
    And(a=notS2, b=andSA4, out=andSA4x);
    And(a=a[4], b=andSA4x, out=outA4);
    And(a=sel[0], b=notS1, out=andSB4);
    And(a=notS2, b=andSB4, out=andSB4x);
    And(a=b[4], b=andSB4x, out=outB4);
    And(a=notS0, b=sel[1], out=andSC4);
    And(a=notS2, b=andSC4, out=andSC4x);
    And(a=c[4], b=andSC4x, out=outC4);
    And(a=sel[0], b=sel[1], out=andSD4);
    And(a=notS2, b=andSD4, out=andSD4x);
    And(a=d[4], b=andSD4x, out=outD4);
    And(a=notS0, b=notS1, out=andSE4);
    And(a=sel[2], b=andSE4, out=andSE4x);
    And(a=e[4], b=andSE4x, out=outE4);
    And(a=sel[0], b=notS1, out=andSF4);
    And(a=sel[2], b=andSF4, out=andSF4x);
    And(a=f[4], b=andSF4x, out=outF4);
    And(a=notS0, b=sel[1], out=andSG4);
    And(a=sel[2], b=andSG4, out=andSG4x);
    And(a=g[4], b=andSG4x, out=outG4);
    And(a=sel[0], b=sel[1], out=andSH4);
    And(a=sel[2], b=andSH4, out=andSH4x);
    And(a=h[4], b=andSH4x, out=outH4);
    Or8Way(in[0]=outA4, in[1]=outB4, in[2]=outC4, in[3]=outD4, in[4]=outE4, in[5]=outF4, in[6]=outG4, in[7]=outH4, out=out[4]);
    And(a=notS0, b=notS1, out=andSA5);
    And(a=notS2, b=andSA5, out=andSA5x);
    And(a=a[5], b=andSA5x, out=outA5);
    And(a=sel[0], b=notS1, out=andSB5);
    And(a=notS2, b=andSB5, out=andSB5x);
    And(a=b[5], b=andSB5x, out=outB5);
    And(a=notS0, b=sel[1], out=andSC5);
    And(a=notS2, b=andSC5, out=andSC5x);
    And(a=c[5], b=andSC5x, out=outC5);
    And(a=sel[0], b=sel[1], out=andSD5);
    And(a=notS2, b=andSD5, out=andSD5x);
    And(a=d[5], b=andSD5x, out=outD5);
    And(a=notS0, b=notS1, out=andSE5);
    And(a=sel[2], b=andSE5, out=andSE5x);
    And(a=e[5], b=andSE5x, out=outE5);
    And(a=sel[0], b=notS1, out=andSF5);
    And(a=sel[2], b=andSF5, out=andSF5x);
    And(a=f[5], b=andSF5x, out=outF5);
    And(a=notS0, b=sel[1], out=andSG5);
    And(a=sel[2], b=andSG5, out=andSG5x);
    And(a=g[5], b=andSG5x, out=outG5);
    And(a=sel[0], b=sel[1], out=andSH5);
    And(a=sel[2], b=andSH5, out=andSH5x);
    And(a=h[5], b=andSH5x, out=outH5);
    Or8Way(in[0]=outA5, in[1]=outB5, in[2]=outC5, in[3]=outD5, in[4]=outE5, in[5]=outF5, in[6]=outG5, in[7]=outH5, out=out[5]);
    And(a=notS0, b=notS1, out=andSA6);
    And(a=notS2, b=andSA6, out=andSA6x);
    And(a=a[6], b=andSA6x, out=outA6);
    And(a=sel[0], b=notS1, out=andSB6);
    And(a=notS2, b=andSB6, out=andSB6x);
    And(a=b[6], b=andSB6x, out=outB6);
    And(a=notS0, b=sel[1], out=andSC6);
    And(a=notS2, b=andSC6, out=andSC6x);
    And(a=c[6], b=andSC6x, out=outC6);
    And(a=sel[0], b=sel[1], out=andSD6);
    And(a=notS2, b=andSD6, out=andSD6x);
    And(a=d[6], b=andSD6x, out=outD6);
    And(a=notS0, b=notS1, out=andSE6);
    And(a=sel[2], b=andSE6, out=andSE6x);
    And(a=e[6], b=andSE6x, out=outE6);
    And(a=sel[0], b=notS1, out=andSF6);
    And(a=sel[2], b=andSF6, out=andSF6x);
    And(a=f[6], b=andSF6x, out=outF6);
    And(a=notS0, b=sel[1], out=andSG6);
    And(a=sel[2], b=andSG6, out=andSG6x);
    And(a=g[6], b=andSG6x, out=outG6);
    And(a=sel[0], b=sel[1], out=andSH6);
    And(a=sel[2], b=andSH6, out=andSH6x);
    And(a=h[6], b=andSH6x, out=outH6);
    Or8Way(in[0]=outA6, in[1]=outB6, in[2]=outC6, in[3]=outD6, in[4]=outE6, in[5]=outF6, in[6]=outG6, in[7]=outH6, out=out[6]);
    And(a=notS0, b=notS1, out=andSA7);
    And(a=notS2, b=andSA7, out=andSA7x);
    And(a=a[7], b=andSA7x, out=outA7);
    And(a=sel[0], b=notS1, out=andSB7);
    And(a=notS2, b=andSB7, out=andSB7x);
    And(a=b[7], b=andSB7x, out=outB7);
    And(a=notS0, b=sel[1], out=andSC7);
    And(a=notS2, b=andSC7, out=andSC7x);
    And(a=c[7], b=andSC7x, out=outC7);
    And(a=sel[0], b=sel[1], out=andSD7);
    And(a=notS2, b=andSD7, out=andSD7x);
    And(a=d[7], b=andSD7x, out=outD7);
    And(a=notS0, b=notS1, out=andSE7);
    And(a=sel[2], b=andSE7, out=andSE7x);
    And(a=e[7], b=andSE7x, out=outE7);
    And(a=sel[0], b=notS1, out=andSF7);
    And(a=sel[2], b=andSF7, out=andSF7x);
    And(a=f[7], b=andSF7x, out=outF7);
    And(a=notS0, b=sel[1], out=andSG7);
    And(a=sel[2], b=andSG7, out=andSG7x);
    And(a=g[7], b=andSG7x, out=outG7);
    And(a=sel[0], b=sel[1], out=andSH7);
    And(a=sel[2], b=andSH7, out=andSH7x);
    And(a=h[7], b=andSH7x, out=outH7);
    Or8Way(in[0]=outA7, in[1]=outB7, in[2]=outC7, in[3]=outD7, in[4]=outE7, in[5]=outF7, in[6]=outG7, in[7]=outH7, out=out[7]);
    And(a=notS0, b=notS1, out=andSA8);
    And(a=notS2, b=andSA8, out=andSA8x);
    And(a=a[8], b=andSA8x, out=outA8);
    And(a=sel[0], b=notS1, out=andSB8);
    And(a=notS2, b=andSB8, out=andSB8x);
    And(a=b[8], b=andSB8x, out=outB8);
    And(a=notS0, b=sel[1], out=andSC8);
    And(a=notS2, b=andSC8, out=andSC8x);
    And(a=c[8], b=andSC8x, out=outC8);
    And(a=sel[0], b=sel[1], out=andSD8);
    And(a=notS2, b=andSD8, out=andSD8x);
    And(a=d[8], b=andSD8x, out=outD8);
    And(a=notS0, b=notS1, out=andSE8);
    And(a=sel[2], b=andSE8, out=andSE8x);
    And(a=e[8], b=andSE8x, out=outE8);
    And(a=sel[0], b=notS1, out=andSF8);
    And(a=sel[2], b=andSF8, out=andSF8x);
    And(a=f[8], b=andSF8x, out=outF8);
    And(a=notS0, b=sel[1], out=andSG8);
    And(a=sel[2], b=andSG8, out=andSG8x);
    And(a=g[8], b=andSG8x, out=outG8);
    And(a=sel[0], b=sel[1], out=andSH8);
    And(a=sel[2], b=andSH8, out=andSH8x);
    And(a=h[8], b=andSH8x, out=outH8);
    Or8Way(in[0]=outA8, in[1]=outB8, in[2]=outC8, in[3]=outD8, in[4]=outE8, in[5]=outF8, in[6]=outG8, in[7]=outH8, out=out[8]);
    And(a=notS0, b=notS1, out=andSA9);
    And(a=notS2, b=andSA9, out=andSA9x);
    And(a=a[9], b=andSA9x, out=outA9);
    And(a=sel[0], b=notS1, out=andSB9);
    And(a=notS2, b=andSB9, out=andSB9x);
    And(a=b[9], b=andSB9x, out=outB9);
    And(a=notS0, b=sel[1], out=andSC9);
    And(a=notS2, b=andSC9, out=andSC9x);
    And(a=c[9], b=andSC9x, out=outC9);
    And(a=sel[0], b=sel[1], out=andSD9);
    And(a=notS2, b=andSD9, out=andSD9x);
    And(a=d[9], b=andSD9x, out=outD9);
    And(a=notS0, b=notS1, out=andSE9);
    And(a=sel[2], b=andSE9, out=andSE9x);
    And(a=e[9], b=andSE9x, out=outE9);
    And(a=sel[0], b=notS1, out=andSF9);
    And(a=sel[2], b=andSF9, out=andSF9x);
    And(a=f[9], b=andSF9x, out=outF9);
    And(a=notS0, b=sel[1], out=andSG9);
    And(a=sel[2], b=andSG9, out=andSG9x);
    And(a=g[9], b=andSG9x, out=outG9);
    And(a=sel[0], b=sel[1], out=andSH9);
    And(a=sel[2], b=andSH9, out=andSH9x);
    And(a=h[9], b=andSH9x, out=outH9);
    Or8Way(in[0]=outA9, in[1]=outB9, in[2]=outC9, in[3]=outD9, in[4]=outE9, in[5]=outF9, in[6]=outG9, in[7]=outH9, out=out[9]);
    And(a=notS0, b=notS1, out=andSA10);
    And(a=notS2, b=andSA10, out=andSA10x);
    And(a=a[10], b=andSA10x, out=outA10);
    And(a=sel[0], b=notS1, out=andSB10);
    And(a=notS2, b=andSB10, out=andSB10x);
    And(a=b[10], b=andSB10x, out=outB10);
    And(a=notS0, b=sel[1], out=andSC10);
    And(a=notS2, b=andSC10, out=andSC10x);
    And(a=c[10], b=andSC10x, out=outC10);
    And(a=sel[0], b=sel[1], out=andSD10);
    And(a=notS2, b=andSD10, out=andSD10x);
    And(a=d[10], b=andSD10x, out=outD10);
    And(a=notS0, b=notS1, out=andSE10);
    And(a=sel[2], b=andSE10, out=andSE10x);
    And(a=e[10], b=andSE10x, out=outE10);
    And(a=sel[0], b=notS1, out=andSF10);
    And(a=sel[2], b=andSF10, out=andSF10x);
    And(a=f[10], b=andSF10x, out=outF10);
    And(a=notS0, b=sel[1], out=andSG10);
    And(a=sel[2], b=andSG10, out=andSG10x);
    And(a=g[10], b=andSG10x, out=outG10);
    And(a=sel[0], b=sel[1], out=andSH10);
    And(a=sel[2], b=andSH10, out=andSH10x);
    And(a=h[10], b=andSH10x, out=outH10);
    Or8Way(in[0]=outA10, in[1]=outB10, in[2]=outC10, in[3]=outD10, in[4]=outE10, in[5]=outF10, in[6]=outG10, in[7]=outH10, out=out[10]);
    And(a=notS0, b=notS1, out=andSA11);
    And(a=notS2, b=andSA11, out=andSA11x);
    And(a=a[11], b=andSA11x, out=outA11);
    And(a=sel[0], b=notS1, out=andSB11);
    And(a=notS2, b=andSB11, out=andSB11x);
    And(a=b[11], b=andSB11x, out=outB11);
    And(a=notS0, b=sel[1], out=andSC11);
    And(a=notS2, b=andSC11, out=andSC11x);
    And(a=c[11], b=andSC11x, out=outC11);
    And(a=sel[0], b=sel[1], out=andSD11);
    And(a=notS2, b=andSD11, out=andSD11x);
    And(a=d[11], b=andSD11x, out=outD11);
    And(a=notS0, b=notS1, out=andSE11);
    And(a=sel[2], b=andSE11, out=andSE11x);
    And(a=e[11], b=andSE11x, out=outE11);
    And(a=sel[0], b=notS1, out=andSF11);
    And(a=sel[2], b=andSF11, out=andSF11x);
    And(a=f[11], b=andSF11x, out=outF11);
    And(a=notS0, b=sel[1], out=andSG11);
    And(a=sel[2], b=andSG11, out=andSG11x);
    And(a=g[11], b=andSG11x, out=outG11);
    And(a=sel[0], b=sel[1], out=andSH11);
    And(a=sel[2], b=andSH11, out=andSH11x);
    And(a=h[11], b=andSH11x, out=outH11);
    Or8Way(in[0]=outA11, in[1]=outB11, in[2]=outC11, in[3]=outD11, in[4]=outE11, in[5]=outF11, in[6]=outG11, in[7]=outH11, out=out[11]);
    And(a=notS0, b=notS1, out=andSA12);
    And(a=notS2, b=andSA12, out=andSA12x);
    And(a=a[12], b=andSA12x, out=outA12);
    And(a=sel[0], b=notS1, out=andSB12);
    And(a=notS2, b=andSB12, out=andSB12x);
    And(a=b[12], b=andSB12x, out=outB12);
    And(a=notS0, b=sel[1], out=andSC12);
    And(a=notS2, b=andSC12, out=andSC12x);
    And(a=c[12], b=andSC12x, out=outC12);
    And(a=sel[0], b=sel[1], out=andSD12);
    And(a=notS2, b=andSD12, out=andSD12x);
    And(a=d[12], b=andSD12x, out=outD12);
    And(a=notS0, b=notS1, out=andSE12);
    And(a=sel[2], b=andSE12, out=andSE12x);
    And(a=e[12], b=andSE12x, out=outE12);
    And(a=sel[0], b=notS1, out=andSF12);
    And(a=sel[2], b=andSF12, out=andSF12x);
    And(a=f[12], b=andSF12x, out=outF12);
    And(a=notS0, b=sel[1], out=andSG12);
    And(a=sel[2], b=andSG12, out=andSG12x);
    And(a=g[12], b=andSG12x, out=outG12);
    And(a=sel[0], b=sel[1], out=andSH12);
    And(a=sel[2], b=andSH12, out=andSH12x);
    And(a=h[12], b=andSH12x, out=outH12);
    Or8Way(in[0]=outA12, in[1]=outB12, in[2]=outC12, in[3]=outD12, in[4]=outE12, in[5]=outF12, in[6]=outG12, in[7]=outH12, out=out[12]);
    And(a=notS0, b=notS1, out=andSA13);
    And(a=notS2, b=andSA13, out=andSA13x);
    And(a=a[13], b=andSA13x, out=outA13);
    And(a=sel[0], b=notS1, out=andSB13);
    And(a=notS2, b=andSB13, out=andSB13x);
    And(a=b[13], b=andSB13x, out=outB13);
    And(a=notS0, b=sel[1], out=andSC13);
    And(a=notS2, b=andSC13, out=andSC13x);
    And(a=c[13], b=andSC13x, out=outC13);
    And(a=sel[0], b=sel[1], out=andSD13);
    And(a=notS2, b=andSD13, out=andSD13x);
    And(a=d[13], b=andSD13x, out=outD13);
    And(a=notS0, b=notS1, out=andSE13);
    And(a=sel[2], b=andSE13, out=andSE13x);
    And(a=e[13], b=andSE13x, out=outE13);
    And(a=sel[0], b=notS1, out=andSF13);
    And(a=sel[2], b=andSF13, out=andSF13x);
    And(a=f[13], b=andSF13x, out=outF13);
    And(a=notS0, b=sel[1], out=andSG13);
    And(a=sel[2], b=andSG13, out=andSG13x);
    And(a=g[13], b=andSG13x, out=outG13);
    And(a=sel[0], b=sel[1], out=andSH13);
    And(a=sel[2], b=andSH13, out=andSH13x);
    And(a=h[13], b=andSH13x, out=outH13);
    Or8Way(in[0]=outA13, in[1]=outB13, in[2]=outC13, in[3]=outD13, in[4]=outE13, in[5]=outF13, in[6]=outG13, in[7]=outH13, out=out[13]);
    And(a=notS0, b=notS1, out=andSA14);
    And(a=notS2, b=andSA14, out=andSA14x);
    And(a=a[14], b=andSA14x, out=outA14);
    And(a=sel[0], b=notS1, out=andSB14);
    And(a=notS2, b=andSB14, out=andSB14x);
    And(a=b[14], b=andSB14x, out=outB14);
    And(a=notS0, b=sel[1], out=andSC14);
    And(a=notS2, b=andSC14, out=andSC14x);
    And(a=c[14], b=andSC14x, out=outC14);
    And(a=sel[0], b=sel[1], out=andSD14);
    And(a=notS2, b=andSD14, out=andSD14x);
    And(a=d[14], b=andSD14x, out=outD14);
    And(a=notS0, b=notS1, out=andSE14);
    And(a=sel[2], b=andSE14, out=andSE14x);
    And(a=e[14], b=andSE14x, out=outE14);
    And(a=sel[0], b=notS1, out=andSF14);
    And(a=sel[2], b=andSF14, out=andSF14x);
    And(a=f[14], b=andSF14x, out=outF14);
    And(a=notS0, b=sel[1], out=andSG14);
    And(a=sel[2], b=andSG14, out=andSG14x);
    And(a=g[14], b=andSG14x, out=outG14);
    And(a=sel[0], b=sel[1], out=andSH14);
    And(a=sel[2], b=andSH14, out=andSH14x);
    And(a=h[14], b=andSH14x, out=outH14);
    Or8Way(in[0]=outA14, in[1]=outB14, in[2]=outC14, in[3]=outD14, in[4]=outE14, in[5]=outF14, in[6]=outG14, in[7]=outH14, out=out[14]);
    And(a=notS0, b=notS1, out=andSA15);
    And(a=notS2, b=andSA15, out=andSA15x);
    And(a=a[15], b=andSA15x, out=outA15);
    And(a=sel[0], b=notS1, out=andSB15);
    And(a=notS2, b=andSB15, out=andSB15x);
    And(a=b[15], b=andSB15x, out=outB15);
    And(a=notS0, b=sel[1], out=andSC15);
    And(a=notS2, b=andSC15, out=andSC15x);
    And(a=c[15], b=andSC15x, out=outC15);
    And(a=sel[0], b=sel[1], out=andSD15);
    And(a=notS2, b=andSD15, out=andSD15x);
    And(a=d[15], b=andSD15x, out=outD15);
    And(a=notS0, b=notS1, out=andSE15);
    And(a=sel[2], b=andSE15, out=andSE15x);
    And(a=e[15], b=andSE15x, out=outE15);
    And(a=sel[0], b=notS1, out=andSF15);
    And(a=sel[2], b=andSF15, out=andSF15x);
    And(a=f[15], b=andSF15x, out=outF15);
    And(a=notS0, b=sel[1], out=andSG15);
    And(a=sel[2], b=andSG15, out=andSG15x);
    And(a=g[15], b=andSG15x, out=outG15);
    And(a=sel[0], b=sel[1], out=andSH15);
    And(a=sel[2], b=andSH15, out=andSH15x);
    And(a=h[15], b=andSH15x, out=outH15);
    Or8Way(in[0]=outA15, in[1]=outB15, in[2]=outC15, in[3]=outD15, in[4]=outE15, in[5]=outF15, in[6]=outG15, in[7]=outH15, out=out[15]);
}
